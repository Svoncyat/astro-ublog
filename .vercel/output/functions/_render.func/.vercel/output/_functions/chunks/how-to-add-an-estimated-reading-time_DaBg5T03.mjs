import { d as createComponent, r as renderTemplate, m as maybeRenderHead, u as unescapeHTML } from './astro_BOFBhy_c.mjs';
import 'kleur/colors';
import 'clsx';

const html = "<p>As the <a href=\"https://docs.astro.build/en/recipes/reading-time/\">Astro docs</a> say, we can use remark plugin to add a reading time property in our frontmatter. However, for some reason, we can‚Äôt add this feature by following what stated in Astro docs. Therefore, to achieve this, we have to tweak a little bit. This post will demonstrate how we can do that.</p>\n<h2 id=\"table-of-contents\">Table of contents</h2>\n<h2 id=\"add-reading-time-in-postdetails\">Add reading time in PostDetails</h2>\n<p>Step (1) Install required dependencies.</p>\n<pre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#61AFEF\">npm</span><span style=\"color:#98C379\"> install</span><span style=\"color:#98C379\"> reading-time</span><span style=\"color:#98C379\"> mdast-util-to-string</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Step (2) Create <code>remark-reading-time.mjs</code> file under <code>utils</code> directory</p>\n<pre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#E06C75\"> getReadingTime</span><span style=\"color:#C678DD\"> from</span><span style=\"color:#98C379\"> \"reading-time\"</span><span style=\"color:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> { </span><span style=\"color:#E06C75\">toString</span><span style=\"color:#ABB2BF\"> } </span><span style=\"color:#C678DD\">from</span><span style=\"color:#98C379\"> \"mdast-util-to-string\"</span><span style=\"color:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">export</span><span style=\"color:#C678DD\"> function</span><span style=\"color:#61AFEF\"> remarkReadingTime</span><span style=\"color:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">  return</span><span style=\"color:#C678DD\"> function</span><span style=\"color:#ABB2BF\"> (</span><span style=\"color:#E06C75;font-style:italic\">tree</span><span style=\"color:#ABB2BF\">, { </span><span style=\"color:#E06C75;font-style:italic\">data</span><span style=\"color:#ABB2BF\"> }) {</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    const</span><span style=\"color:#E5C07B\"> textOnPage</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#61AFEF\"> toString</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E06C75\">tree</span><span style=\"color:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    const</span><span style=\"color:#E5C07B\"> readingTime</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#61AFEF\"> getReadingTime</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E06C75\">textOnPage</span><span style=\"color:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">    data</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">astro</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">frontmatter</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E06C75\">readingTime</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#E5C07B\"> readingTime</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E06C75\">text</span><span style=\"color:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">  };</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Step (3) Add the plugin to <code>astro.config.ts</code></p>\n<pre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> { </span><span style=\"color:#E06C75\">remarkReadingTime</span><span style=\"color:#ABB2BF\"> } </span><span style=\"color:#C678DD\">from</span><span style=\"color:#98C379\"> \"./src/utils/remark-reading-time.mjs\"</span><span style=\"color:#ABB2BF\">; </span><span style=\"color:#7F848E;font-style:italic\">// make sure your relative path is correct</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">// https://astro.build/config</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">export</span><span style=\"color:#C678DD\"> default</span><span style=\"color:#61AFEF\"> defineConfig</span><span style=\"color:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"color:#E06C75\">  site</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#E5C07B\">SITE</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E06C75\">website</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75\">  integrations</span><span style=\"color:#ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">    // other integrations</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">  ],</span></span>\n<span class=\"line\"><span style=\"color:#E06C75\">  markdown</span><span style=\"color:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color:#E06C75\">    remarkPlugins</span><span style=\"color:#ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color:#E06C75\">      remarkToc</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75\">      remarkReadingTime</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#7F848E;font-style:italic\">// üëàüèª our plugin</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">      [</span></span>\n<span class=\"line\"><span style=\"color:#E06C75\">        remarkCollapse</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        {</span></span>\n<span class=\"line\"><span style=\"color:#E06C75\">          test</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#98C379\">\"Table of contents\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        },</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">      ],</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    ],</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">    // other config</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">  // other config</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">});</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Step (4) Add <code>readingTime</code> to blog schema (<code>src/content/config.ts</code>)</p>\n<pre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> { </span><span style=\"color:#E06C75\">SITE</span><span style=\"color:#ABB2BF\"> } </span><span style=\"color:#C678DD\">from</span><span style=\"color:#98C379\"> \"@config\"</span><span style=\"color:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> { </span><span style=\"color:#E06C75\">defineCollection</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75\">z</span><span style=\"color:#ABB2BF\"> } </span><span style=\"color:#C678DD\">from</span><span style=\"color:#98C379\"> \"astro:content\"</span><span style=\"color:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">const</span><span style=\"color:#E5C07B\"> blog</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#61AFEF\"> defineCollection</span><span style=\"color:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"color:#E06C75\">  type</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#98C379\">\"content\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">  schema</span><span style=\"color:#ABB2BF\">: ({ </span><span style=\"color:#E06C75;font-style:italic\">image</span><span style=\"color:#ABB2BF\"> }) </span><span style=\"color:#C678DD\">=></span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">    z</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">object</span><span style=\"color:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">      // others...</span></span>\n<span class=\"line\"><span style=\"color:#E06C75\">      canonicalURL</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#E5C07B\">z</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">string</span><span style=\"color:#ABB2BF\">().</span><span style=\"color:#61AFEF\">optional</span><span style=\"color:#ABB2BF\">(),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75\">      readingTime</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#E5C07B\">z</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">string</span><span style=\"color:#ABB2BF\">().</span><span style=\"color:#61AFEF\">optional</span><span style=\"color:#ABB2BF\">(), </span><span style=\"color:#7F848E;font-style:italic\">// üëàüèª readingTime frontmatter</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    }),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">export</span><span style=\"color:#C678DD\"> const</span><span style=\"color:#E5C07B\"> collections</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#ABB2BF\"> { </span><span style=\"color:#E06C75\">blog</span><span style=\"color:#ABB2BF\"> };</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Step (5) Create a new file called <code>getPostsWithRT.ts</code> under <code>src/utils</code> directory.</p>\n<pre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#C678DD\"> type</span><span style=\"color:#ABB2BF\"> { </span><span style=\"color:#E06C75\">MarkdownInstance</span><span style=\"color:#ABB2BF\"> } </span><span style=\"color:#C678DD\">from</span><span style=\"color:#98C379\"> \"astro\"</span><span style=\"color:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#C678DD\"> type</span><span style=\"color:#ABB2BF\"> { </span><span style=\"color:#E06C75\">CollectionEntry</span><span style=\"color:#ABB2BF\"> } </span><span style=\"color:#C678DD\">from</span><span style=\"color:#98C379\"> \"astro:content\"</span><span style=\"color:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> { </span><span style=\"color:#E06C75\">slugifyStr</span><span style=\"color:#ABB2BF\"> } </span><span style=\"color:#C678DD\">from</span><span style=\"color:#98C379\"> \"./slugify\"</span><span style=\"color:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">export</span><span style=\"color:#C678DD\"> const</span><span style=\"color:#61AFEF\"> getReadingTime</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#C678DD\"> async</span><span style=\"color:#ABB2BF\"> () </span><span style=\"color:#C678DD\">=></span><span style=\"color:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">  // Get all posts using glob. This is to get the updated frontmatter</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">  const</span><span style=\"color:#E5C07B\"> globPosts</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#C678DD\"> import</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E06C75\">meta</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">glob</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"../content/blog/*.md\"</span><span style=\"color:#ABB2BF\">) </span><span style=\"color:#C678DD\">as</span><span style=\"color:#E5C07B\"> Promise</span><span style=\"color:#ABB2BF\">&#x3C;</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">    CollectionEntry</span><span style=\"color:#ABB2BF\">&#x3C;</span><span style=\"color:#98C379\">\"blog\"</span><span style=\"color:#ABB2BF\">>[</span><span style=\"color:#98C379\">\"data\"</span><span style=\"color:#ABB2BF\">][]</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">  >;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">  // Then, set those frontmatter value in a JS Map with key value pair</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">  const</span><span style=\"color:#E5C07B\"> mapFrontmatter</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#C678DD\"> new</span><span style=\"color:#61AFEF\"> Map</span><span style=\"color:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">  const</span><span style=\"color:#E5C07B\"> globPostsValues</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#E5C07B\"> Object</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">values</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E06C75\">globPosts</span><span style=\"color:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">  await</span><span style=\"color:#E5C07B\"> Promise</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">all</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">    globPostsValues</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">map</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#C678DD\">async</span><span style=\"color:#E06C75;font-style:italic\"> globPost</span><span style=\"color:#C678DD\"> =></span><span style=\"color:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">      const</span><span style=\"color:#ABB2BF\"> { </span><span style=\"color:#E5C07B\">frontmatter</span><span style=\"color:#ABB2BF\"> } </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#C678DD\"> await</span><span style=\"color:#61AFEF\"> globPost</span><span style=\"color:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">      mapFrontmatter</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">set</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">        slugifyStr</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">frontmatter</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E06C75\">title</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        frontmatter</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E06C75\">readingTime</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">      );</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    })</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">  );</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">  return</span><span style=\"color:#E06C75\"> mapFrontmatter</span><span style=\"color:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">const</span><span style=\"color:#61AFEF\"> getPostsWithRT</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#C678DD\"> async</span><span style=\"color:#ABB2BF\"> (</span><span style=\"color:#E06C75;font-style:italic\">posts</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#E5C07B\">CollectionEntry</span><span style=\"color:#ABB2BF\">&#x3C;</span><span style=\"color:#98C379\">\"blog\"</span><span style=\"color:#ABB2BF\">>[]) </span><span style=\"color:#C678DD\">=></span><span style=\"color:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">  const</span><span style=\"color:#E5C07B\"> mapFrontmatter</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#C678DD\"> await</span><span style=\"color:#61AFEF\"> getReadingTime</span><span style=\"color:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">  return</span><span style=\"color:#E5C07B\"> posts</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">map</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E06C75;font-style:italic\">post</span><span style=\"color:#C678DD\"> =></span><span style=\"color:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">    post</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">data</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E06C75\">readingTime</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#E5C07B\"> mapFrontmatter</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">get</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#61AFEF\">slugifyStr</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">post</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">data</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E06C75\">title</span><span style=\"color:#ABB2BF\">));</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#E06C75\"> post</span><span style=\"color:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">  });</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">export</span><span style=\"color:#C678DD\"> default</span><span style=\"color:#E06C75\"> getPostsWithRT</span><span style=\"color:#ABB2BF\">;</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Step (6) Refactor <code>getStaticPaths</code> of <code>/src/pages/posts/[slug].astro</code> as the following</p>\n<pre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#56B6C2\">---</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">// other imports</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#E06C75\"> getPostsWithRT</span><span style=\"color:#C678DD\"> from</span><span style=\"color:#98C379\"> \"@utils/getPostsWithRT\"</span><span style=\"color:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">export</span><span style=\"color:#C678DD\"> interface</span><span style=\"color:#E5C07B\"> Props</span><span style=\"color:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E06C75\">  post</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#E5C07B\">CollectionEntry</span><span style=\"color:#ABB2BF\">&#x3C;</span><span style=\"color:#98C379\">\"blog\"</span><span style=\"color:#ABB2BF\">>;</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">export</span><span style=\"color:#C678DD\"> async</span><span style=\"color:#C678DD\"> function</span><span style=\"color:#61AFEF\"> getStaticPaths</span><span style=\"color:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">  const</span><span style=\"color:#E5C07B\"> posts</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#C678DD\"> await</span><span style=\"color:#61AFEF\"> getCollection</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"blog\"</span><span style=\"color:#ABB2BF\">, ({ </span><span style=\"color:#E06C75;font-style:italic\">data</span><span style=\"color:#ABB2BF\"> }) </span><span style=\"color:#C678DD\">=></span><span style=\"color:#56B6C2\"> !</span><span style=\"color:#E5C07B\">data</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E06C75\">draft</span><span style=\"color:#ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">  const</span><span style=\"color:#E5C07B\"> postsWithRT</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#C678DD\"> await</span><span style=\"color:#61AFEF\"> getPostsWithRT</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E06C75\">posts</span><span style=\"color:#ABB2BF\">); </span><span style=\"color:#7F848E;font-style:italic\">// replace reading time logic with this func</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">   const</span><span style=\"color:#E5C07B\"> postResult</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#E5C07B\"> postsWithRT</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">map</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E06C75;font-style:italic\">post</span><span style=\"color:#C678DD\"> =></span><span style=\"color:#ABB2BF\"> ({ </span><span style=\"color:#7F848E;font-style:italic\">// make sure to replace posts with postsWithRT</span></span>\n<span class=\"line\"><span style=\"color:#E06C75\">    params</span><span style=\"color:#ABB2BF\">: { </span><span style=\"color:#E06C75\">slug</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#E5C07B\">post</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E06C75\">slug</span><span style=\"color:#ABB2BF\"> },</span></span>\n<span class=\"line\"><span style=\"color:#E06C75\">    props</span><span style=\"color:#ABB2BF\">: { </span><span style=\"color:#E06C75\">post</span><span style=\"color:#ABB2BF\"> },</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">  }));</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">// other codes</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Step (7) Refactor <code>PostDetails.astro</code> like this. Now you can access and display <code>readingTime</code> in <code>PostDetails.astro</code></p>\n<pre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#56B6C2\">---</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">// imports</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">export</span><span style=\"color:#C678DD\"> interface</span><span style=\"color:#E5C07B\"> Props</span><span style=\"color:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E06C75\">  post</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#E5C07B\">CollectionEntry</span><span style=\"color:#ABB2BF\">&#x3C;</span><span style=\"color:#98C379\">\"blog\"</span><span style=\"color:#ABB2BF\">>;</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">const</span><span style=\"color:#ABB2BF\"> { </span><span style=\"color:#E5C07B\">post</span><span style=\"color:#ABB2BF\"> } </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#E5C07B\"> Astro</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E06C75\">props</span><span style=\"color:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">const</span><span style=\"color:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">  title</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">  author</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">  description</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">  ogImage</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">  readingTime</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#7F848E;font-style:italic\">// we can now directly access readingTime from frontmatter</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">  pubDatetime</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">  modDatetime</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">  tags</span><span style=\"color:#ABB2BF\"> } </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#E5C07B\"> post</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E06C75\">data</span><span style=\"color:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">// other codes</span></span>\n<span class=\"line\"><span style=\"color:#56B6C2\">---</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"access-reading-time-outside-of-postdetails-optional\">Access reading time outside of PostDetails (optional)</h2>\n<p>By following the previous steps, you can now access <code>readingTime</code> frontmatter property in you post details page. Sometimes, this is exactly what you want. If so, you can skip to the next section. However, if you want to display ‚Äúestimated reading time‚Äù in index, posts, and technically everywhere, you need to do the following extra steps.</p>\n<p>Step (1) Update <code>utils/getSortedPosts.ts</code> as the following</p>\n<pre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#C678DD\"> type</span><span style=\"color:#ABB2BF\"> { </span><span style=\"color:#E06C75\">CollectionEntry</span><span style=\"color:#ABB2BF\"> } </span><span style=\"color:#C678DD\">from</span><span style=\"color:#98C379\"> \"astro:content\"</span><span style=\"color:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#E06C75\"> getPostsWithRT</span><span style=\"color:#C678DD\"> from</span><span style=\"color:#98C379\"> \"./getPostsWithRT\"</span><span style=\"color:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">const</span><span style=\"color:#61AFEF\"> getSortedPosts</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#C678DD\"> async</span><span style=\"color:#ABB2BF\"> (</span><span style=\"color:#E06C75;font-style:italic\">posts</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#E5C07B\">CollectionEntry</span><span style=\"color:#ABB2BF\">&#x3C;</span><span style=\"color:#98C379\">\"blog\"</span><span style=\"color:#ABB2BF\">>[]) </span><span style=\"color:#C678DD\">=></span><span style=\"color:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">  // make sure that this func is async</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">  const</span><span style=\"color:#E5C07B\"> postsWithRT</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#C678DD\"> await</span><span style=\"color:#61AFEF\"> getPostsWithRT</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E06C75\">posts</span><span style=\"color:#ABB2BF\">); </span><span style=\"color:#7F848E;font-style:italic\">// add reading time</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">  return</span><span style=\"color:#E06C75\"> postsWithRT</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    .</span><span style=\"color:#61AFEF\">filter</span><span style=\"color:#ABB2BF\">(({ </span><span style=\"color:#E06C75;font-style:italic\">data</span><span style=\"color:#ABB2BF\"> }) </span><span style=\"color:#C678DD\">=></span><span style=\"color:#56B6C2\"> !</span><span style=\"color:#E5C07B\">data</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E06C75\">draft</span><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    .</span><span style=\"color:#61AFEF\">sort</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">      (</span><span style=\"color:#E06C75;font-style:italic\">a</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">b</span><span style=\"color:#ABB2BF\">) </span><span style=\"color:#C678DD\">=></span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        Math</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">floor</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">          new</span><span style=\"color:#61AFEF\"> Date</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">b</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">data</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E06C75\">modDatetime</span><span style=\"color:#56B6C2\"> ??</span><span style=\"color:#E5C07B\"> b</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">data</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E06C75\">pubDatetime</span><span style=\"color:#ABB2BF\">).</span><span style=\"color:#61AFEF\">getTime</span><span style=\"color:#ABB2BF\">() </span><span style=\"color:#56B6C2\">/</span><span style=\"color:#D19A66\"> 1000</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ) </span><span style=\"color:#56B6C2\">-</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        Math</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">floor</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">          new</span><span style=\"color:#61AFEF\"> Date</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">a</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">data</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E06C75\">modDatetime</span><span style=\"color:#56B6C2\"> ??</span><span style=\"color:#E5C07B\"> a</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">data</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E06C75\">pubDatetime</span><span style=\"color:#ABB2BF\">).</span><span style=\"color:#61AFEF\">getTime</span><span style=\"color:#ABB2BF\">() </span><span style=\"color:#56B6C2\">/</span><span style=\"color:#D19A66\"> 1000</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        )</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    );</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">export</span><span style=\"color:#C678DD\"> default</span><span style=\"color:#E06C75\"> getSortedPosts</span><span style=\"color:#ABB2BF\">;</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Step (2) Make sure to refactor every file which uses <code>getSortedPosts</code> function. You can simply add <code>await</code> keyword in front of <code>getSortedPosts</code> function.</p>\n<p>Files that use <code>getSortedPosts</code> function are as follow</p>\n<ul>\n<li>src/pages/index.astro</li>\n<li>src/pages/posts/index.astro</li>\n<li>src/pages/rss.xml.ts</li>\n<li>src/pages/posts/index.astro</li>\n<li>src/pages/posts/[slug].astro</li>\n<li>src/utils/getPostsByTag.ts</li>\n</ul>\n<p>All you have to do is like this</p>\n<pre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">const</span><span style=\"color:#E5C07B\"> sortedPosts</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#61AFEF\"> getSortedPosts</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E06C75\">posts</span><span style=\"color:#ABB2BF\">); </span><span style=\"color:#7F848E;font-style:italic\">// old code ‚ùå</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">const</span><span style=\"color:#E5C07B\"> sortedPosts</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#C678DD\"> await</span><span style=\"color:#61AFEF\"> getSortedPosts</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E06C75\">posts</span><span style=\"color:#ABB2BF\">); </span><span style=\"color:#7F848E;font-style:italic\">// new code ‚úÖ</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Now you can access <code>readingTime</code> in other places besides <code>PostDetails</code></p>\n<h2 id=\"displaying-reading-time-optional\">Displaying reading time (optional)</h2>\n<p>Since you can now access <code>readingTime</code> in your post details (or everywhere if you do the above section), it‚Äôs up to you to display <code>readingTime</code> wherever you want.</p>\n<p>But in this section, I‚Äôm gonna show you how I would display <code>readingTime</code> in my components. This is optional. You can ignore this section if you want.</p>\n<p>Step (1) Update <code>Datetime</code> component to display <code>readingTime</code></p>\n<pre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> { </span><span style=\"color:#E06C75\">LOCALE</span><span style=\"color:#ABB2BF\"> } </span><span style=\"color:#C678DD\">from</span><span style=\"color:#98C379\"> \"@config\"</span><span style=\"color:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">export</span><span style=\"color:#C678DD\"> interface</span><span style=\"color:#E5C07B\"> Props</span><span style=\"color:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E06C75\">  datetime</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#E5C07B\">string</span><span style=\"color:#ABB2BF\"> | </span><span style=\"color:#E5C07B\">Date</span><span style=\"color:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color:#E06C75\">  size</span><span style=\"color:#C678DD\">?</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#98C379\">\"sm\"</span><span style=\"color:#ABB2BF\"> | </span><span style=\"color:#98C379\">\"lg\"</span><span style=\"color:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color:#E06C75\">  className</span><span style=\"color:#C678DD\">?</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#E5C07B\">string</span><span style=\"color:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color:#E06C75\">  readingTime</span><span style=\"color:#C678DD\">?</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#E5C07B\">string</span><span style=\"color:#ABB2BF\">; </span><span style=\"color:#7F848E;font-style:italic\">// new type</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">export</span><span style=\"color:#C678DD\"> default</span><span style=\"color:#C678DD\"> function</span><span style=\"color:#61AFEF\"> Datetime</span><span style=\"color:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">  datetime</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">  size</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#98C379\"> \"sm\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">  className</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">  readingTime</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#7F848E;font-style:italic\">// new prop</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">}: </span><span style=\"color:#E5C07B\">Props</span><span style=\"color:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">  return</span><span style=\"color:#ABB2BF\"> (</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">    // other codes</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    &#x3C;</span><span style=\"color:#E06C75\">span</span><span style=\"color:#D19A66;font-style:italic\"> className</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#C678DD\">{</span><span style=\"color:#98C379\">`italic </span><span style=\"color:#C678DD\">${</span><span style=\"color:#E06C75\">size</span><span style=\"color:#56B6C2\"> ===</span><span style=\"color:#98C379\"> \"sm\"</span><span style=\"color:#C678DD\"> ?</span><span style=\"color:#98C379\"> \"text-sm\"</span><span style=\"color:#C678DD\"> :</span><span style=\"color:#98C379\"> \"text-base\"</span><span style=\"color:#C678DD\">}</span><span style=\"color:#98C379\">`</span><span style=\"color:#C678DD\">}</span><span style=\"color:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">      &#x3C;</span><span style=\"color:#E5C07B\">FormattedDatetime</span><span style=\"color:#D19A66;font-style:italic\"> pubDatetime</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#C678DD\">{</span><span style=\"color:#E06C75\">pubDatetime</span><span style=\"color:#C678DD\">}</span><span style=\"color:#D19A66;font-style:italic\"> modDatetime</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#C678DD\">{</span><span style=\"color:#E06C75\">modDatetime</span><span style=\"color:#C678DD\">}</span><span style=\"color:#ABB2BF\"> /></span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">      &#x3C;</span><span style=\"color:#E06C75\">span</span><span style=\"color:#ABB2BF\">> (</span><span style=\"color:#C678DD\">{</span><span style=\"color:#E06C75\">readingTime</span><span style=\"color:#C678DD\">}</span><span style=\"color:#ABB2BF\">)&#x3C;/</span><span style=\"color:#E06C75\">span</span><span style=\"color:#ABB2BF\">> </span><span style=\"color:#C678DD\">{</span><span style=\"color:#7F848E;font-style:italic\">/* display reading time */</span><span style=\"color:#C678DD\">}</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    &#x3C;/</span><span style=\"color:#E06C75\">span</span><span style=\"color:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">    // other codes</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">  );</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Step (2) Then, pass <code>readingTime</code> props from its parent component.</p>\n<p>file: Card.tsx</p>\n<pre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">export</span><span style=\"color:#C678DD\"> default</span><span style=\"color:#C678DD\"> function</span><span style=\"color:#61AFEF\"> Card</span><span style=\"color:#ABB2BF\">({ </span><span style=\"color:#E06C75;font-style:italic\">href</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">frontmatter</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">secHeading</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#D19A66\"> true</span><span style=\"color:#ABB2BF\"> }: </span><span style=\"color:#E5C07B\">Props</span><span style=\"color:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">  const</span><span style=\"color:#ABB2BF\"> { </span><span style=\"color:#E5C07B\">title</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E5C07B\">pubDatetime</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E5C07B\">modDatetime</span><span style=\"color:#E5C07B\"> description</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E5C07B\">readingTime</span><span style=\"color:#ABB2BF\"> } </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#E06C75\"> frontmatter</span><span style=\"color:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">  return</span><span style=\"color:#ABB2BF\"> (</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    ...</span></span>\n<span class=\"line\"><span style=\"color:#56B6C2\">    &#x3C;</span><span style=\"color:#E06C75;font-style:italic\">Datetime</span></span>\n<span class=\"line\"><span style=\"color:#E06C75\">      pubDatetime</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">{</span><span style=\"color:#E06C75\">pubDatetime</span><span style=\"color:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"color:#E06C75\">      modDatetime</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">{</span><span style=\"color:#E06C75\">modDatetime</span><span style=\"color:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"color:#E06C75\">      readingTime</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">{</span><span style=\"color:#E06C75\">readingTime</span><span style=\"color:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"color:#56B6C2\">    /></span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    ...</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">  );</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<p>file: PostDetails.tsx</p>\n<pre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">// Other Codes</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">&#x3C;</span><span style=\"color:#E06C75\">main</span><span style=\"color:#D19A66;font-style:italic\"> id</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"main-content\"</span><span style=\"color:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">  &#x3C;</span><span style=\"color:#E06C75\">h1</span><span style=\"color:#D19A66;font-style:italic\"> class</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"post-title\"</span><span style=\"color:#ABB2BF\">></span><span style=\"color:#C678DD\">{</span><span style=\"color:#E06C75\">title</span><span style=\"color:#C678DD\">}</span><span style=\"color:#ABB2BF\">&#x3C;/</span><span style=\"color:#E06C75\">h1</span><span style=\"color:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">  &#x3C;</span><span style=\"color:#E5C07B\">Datetime</span></span>\n<span class=\"line\"><span style=\"color:#D19A66;font-style:italic\">    pubDatetime</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#C678DD\">{</span><span style=\"color:#E06C75\">pubDatetime</span><span style=\"color:#C678DD\">}</span></span>\n<span class=\"line\"><span style=\"color:#D19A66;font-style:italic\">    modDatetime</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#C678DD\">{</span><span style=\"color:#E06C75\">modDatetime</span><span style=\"color:#C678DD\">}</span></span>\n<span class=\"line\"><span style=\"color:#D19A66;font-style:italic\">    size</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"lg\"</span></span>\n<span class=\"line\"><span style=\"color:#D19A66;font-style:italic\">    className</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"my-2\"</span></span>\n<span class=\"line\"><span style=\"color:#D19A66;font-style:italic\">    readingTime</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#C678DD\">{</span><span style=\"color:#E06C75\">readingTime</span><span style=\"color:#C678DD\">}</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">  /></span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">  {</span><span style=\"color:#7F848E;font-style:italic\">/* Other Codes */</span><span style=\"color:#C678DD\">}</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">&#x3C;/</span><span style=\"color:#E06C75\">main</span><span style=\"color:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">// Other Codes</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"conclusion\">Conclusion</h2>\n<p>By following the provided steps and tweaks, you can now incorporate this useful feature into your content. I hope this post helps you adding <code>readingTime</code> in your blog. AstroPaper might include reading time by default in future releases. ü§∑üèª‚Äç‚ôÇÔ∏è</p>\n<p>Kyay Zuu for Reading üôèüèª</p>";

				const frontmatter = {"title":"How to add an estimated reading time in AstroPaper","author":"Sat Naing","pubDatetime":"2023-07-21T10:11:06.130Z","modDatetime":"2024-01-03T14:53:25.000Z","slug":"how-to-add-estimated-reading-time","featured":false,"draft":true,"tags":["FAQ"],"description":"How you can add an 'Estimated Reading time' in your blog posts of AstroPaper."};
				const file = "C:/Workspaces/Cloned/astro-ublog/src/content/blog/how-to-add-an-estimated-reading-time.md";
				const url = undefined;
				function rawContent() {
					return "\nAs the [Astro docs](https://docs.astro.build/en/recipes/reading-time/) say, we can use remark plugin to add a reading time property in our frontmatter. However, for some reason, we can't add this feature by following what stated in Astro docs. Therefore, to achieve this, we have to tweak a little bit. This post will demonstrate how we can do that.\n\n## Table of contents\n\n## Add reading time in PostDetails\n\nStep (1) Install required dependencies.\n\n```bash\nnpm install reading-time mdast-util-to-string\n```\n\nStep (2) Create `remark-reading-time.mjs` file under `utils` directory\n\n```js\nimport getReadingTime from \"reading-time\";\nimport { toString } from \"mdast-util-to-string\";\n\nexport function remarkReadingTime() {\n  return function (tree, { data }) {\n    const textOnPage = toString(tree);\n    const readingTime = getReadingTime(textOnPage);\n    data.astro.frontmatter.readingTime = readingTime.text;\n  };\n}\n```\n\nStep (3) Add the plugin to `astro.config.ts`\n\n```js\nimport { remarkReadingTime } from \"./src/utils/remark-reading-time.mjs\"; // make sure your relative path is correct\n\n// https://astro.build/config\nexport default defineConfig({\n  site: SITE.website,\n  integrations: [\n    // other integrations\n  ],\n  markdown: {\n    remarkPlugins: [\n      remarkToc,\n      remarkReadingTime, // üëàüèª our plugin\n      [\n        remarkCollapse,\n        {\n          test: \"Table of contents\",\n        },\n      ],\n    ],\n    // other config\n  },\n  // other config\n});\n```\n\nStep (4) Add `readingTime` to blog schema (`src/content/config.ts`)\n\n```ts\nimport { SITE } from \"@config\";\nimport { defineCollection, z } from \"astro:content\";\n\nconst blog = defineCollection({\n  type: \"content\",\n  schema: ({ image }) =>\n    z.object({\n      // others...\n      canonicalURL: z.string().optional(),\n      readingTime: z.string().optional(), // üëàüèª readingTime frontmatter\n    }),\n});\n\nexport const collections = { blog };\n```\n\nStep (5) Create a new file called `getPostsWithRT.ts` under `src/utils` directory.\n\n```ts\nimport type { MarkdownInstance } from \"astro\";\nimport type { CollectionEntry } from \"astro:content\";\nimport { slugifyStr } from \"./slugify\";\n\nexport const getReadingTime = async () => {\n  // Get all posts using glob. This is to get the updated frontmatter\n  const globPosts = import.meta.glob(\"../content/blog/*.md\") as Promise<\n    CollectionEntry<\"blog\">[\"data\"][]\n  >;\n\n  // Then, set those frontmatter value in a JS Map with key value pair\n  const mapFrontmatter = new Map();\n  const globPostsValues = Object.values(globPosts);\n  await Promise.all(\n    globPostsValues.map(async globPost => {\n      const { frontmatter } = await globPost();\n      mapFrontmatter.set(\n        slugifyStr(frontmatter.title),\n        frontmatter.readingTime\n      );\n    })\n  );\n\n  return mapFrontmatter;\n};\n\nconst getPostsWithRT = async (posts: CollectionEntry<\"blog\">[]) => {\n  const mapFrontmatter = await getReadingTime();\n  return posts.map(post => {\n    post.data.readingTime = mapFrontmatter.get(slugifyStr(post.data.title));\n    return post;\n  });\n};\n\nexport default getPostsWithRT;\n```\n\nStep (6) Refactor `getStaticPaths` of `/src/pages/posts/[slug].astro` as the following\n\n```ts\n---\n// other imports\nimport getPostsWithRT from \"@utils/getPostsWithRT\";\n\nexport interface Props {\n  post: CollectionEntry<\"blog\">;\n}\n\nexport async function getStaticPaths() {\n  const posts = await getCollection(\"blog\", ({ data }) => !data.draft);\n\n  const postsWithRT = await getPostsWithRT(posts); // replace reading time logic with this func\n\n   const postResult = postsWithRT.map(post => ({ // make sure to replace posts with postsWithRT\n    params: { slug: post.slug },\n    props: { post },\n  }));\n\n// other codes\n```\n\nStep (7) Refactor `PostDetails.astro` like this. Now you can access and display `readingTime` in `PostDetails.astro`\n\n```ts\n---\n// imports\n\nexport interface Props {\n  post: CollectionEntry<\"blog\">;\n}\n\nconst { post } = Astro.props;\n\nconst {\n  title,\n  author,\n  description,\n  ogImage,\n  readingTime, // we can now directly access readingTime from frontmatter\n  pubDatetime,\n  modDatetime,\n  tags } = post.data;\n\n// other codes\n---\n```\n\n## Access reading time outside of PostDetails (optional)\n\nBy following the previous steps, you can now access `readingTime` frontmatter property in you post details page. Sometimes, this is exactly what you want. If so, you can skip to the next section. However, if you want to display \"estimated reading time\" in index, posts, and technically everywhere, you need to do the following extra steps.\n\nStep (1) Update `utils/getSortedPosts.ts` as the following\n\n```ts\nimport type { CollectionEntry } from \"astro:content\";\nimport getPostsWithRT from \"./getPostsWithRT\";\n\nconst getSortedPosts = async (posts: CollectionEntry<\"blog\">[]) => {\n  // make sure that this func is async\n  const postsWithRT = await getPostsWithRT(posts); // add reading time\n  return postsWithRT\n    .filter(({ data }) => !data.draft)\n    .sort(\n      (a, b) =>\n        Math.floor(\n          new Date(b.data.modDatetime ?? b.data.pubDatetime).getTime() / 1000\n        ) -\n        Math.floor(\n          new Date(a.data.modDatetime ?? a.data.pubDatetime).getTime() / 1000\n        )\n    );\n};\n\nexport default getSortedPosts;\n```\n\nStep (2) Make sure to refactor every file which uses `getSortedPosts` function. You can simply add `await` keyword in front of `getSortedPosts` function.\n\nFiles that use `getSortedPosts` function are as follow\n\n- src/pages/index.astro\n- src/pages/posts/index.astro\n- src/pages/rss.xml.ts\n- src/pages/posts/index.astro\n- src/pages/posts/[slug].astro\n- src/utils/getPostsByTag.ts\n\nAll you have to do is like this\n\n```ts\nconst sortedPosts = getSortedPosts(posts); // old code ‚ùå\nconst sortedPosts = await getSortedPosts(posts); // new code ‚úÖ\n```\n\nNow you can access `readingTime` in other places besides `PostDetails`\n\n## Displaying reading time (optional)\n\nSince you can now access `readingTime` in your post details (or everywhere if you do the above section), it's up to you to display `readingTime` wherever you want.\n\nBut in this section, I'm gonna show you how I would display `readingTime` in my components. This is optional. You can ignore this section if you want.\n\nStep (1) Update `Datetime` component to display `readingTime`\n\n```tsx\nimport { LOCALE } from \"@config\";\n\nexport interface Props {\n  datetime: string | Date;\n  size?: \"sm\" | \"lg\";\n  className?: string;\n  readingTime?: string; // new type\n}\n\nexport default function Datetime({\n  datetime,\n  size = \"sm\",\n  className,\n  readingTime, // new prop\n}: Props) {\n  return (\n    // other codes\n    <span className={`italic ${size === \"sm\" ? \"text-sm\" : \"text-base\"}`}>\n      <FormattedDatetime pubDatetime={pubDatetime} modDatetime={modDatetime} />\n      <span> ({readingTime})</span> {/* display reading time */}\n    </span>\n    // other codes\n  );\n}\n```\n\nStep (2) Then, pass `readingTime` props from its parent component.\n\nfile: Card.tsx\n\n```ts\nexport default function Card({ href, frontmatter, secHeading = true }: Props) {\n  const { title, pubDatetime, modDatetime description, readingTime } = frontmatter;\n  return (\n    ...\n    <Datetime\n      pubDatetime={pubDatetime}\n      modDatetime={modDatetime}\n      readingTime={readingTime}\n    />\n    ...\n  );\n}\n```\n\nfile: PostDetails.tsx\n\n```jsx\n// Other Codes\n<main id=\"main-content\">\n  <h1 class=\"post-title\">{title}</h1>\n  <Datetime\n    pubDatetime={pubDatetime}\n    modDatetime={modDatetime}\n    size=\"lg\"\n    className=\"my-2\"\n    readingTime={readingTime}\n  />\n  {/* Other Codes */}\n</main>\n// Other Codes\n```\n\n## Conclusion\n\nBy following the provided steps and tweaks, you can now incorporate this useful feature into your content. I hope this post helps you adding `readingTime` in your blog. AstroPaper might include reading time by default in future releases. ü§∑üèª‚Äç‚ôÇÔ∏è\n\nKyay Zuu for Reading üôèüèª\n";
				}
				function compiledContent() {
					return html;
				}
				function getHeadings() {
					return [{"depth":2,"slug":"table-of-contents","text":"Table of contents"},{"depth":2,"slug":"add-reading-time-in-postdetails","text":"Add reading time in PostDetails"},{"depth":2,"slug":"access-reading-time-outside-of-postdetails-optional","text":"Access reading time outside of PostDetails (optional)"},{"depth":2,"slug":"displaying-reading-time-optional","text":"Displaying reading time (optional)"},{"depth":2,"slug":"conclusion","text":"Conclusion"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`;
				});

export { Content, compiledContent, Content as default, file, frontmatter, getHeadings, rawContent, url };
